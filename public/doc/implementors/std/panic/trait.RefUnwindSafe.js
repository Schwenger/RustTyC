(function() {var implementors = {};
implementors["rusttyc"] = [{"text":"impl RefUnwindSafe for TcKey","synthetic":true,"types":[]},{"text":"impl&lt;V, Var&gt; RefUnwindSafe for TypeChecker&lt;V, Var&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Var: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for TcErr&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;V as Variant&gt;::Err: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for Partial&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;V&gt; RefUnwindSafe for Preliminary&lt;V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;V: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arity","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()